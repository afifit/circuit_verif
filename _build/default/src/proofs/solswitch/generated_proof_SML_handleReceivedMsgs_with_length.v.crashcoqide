From refinedc.typing Require Import typing.
From refinedc.project.learning.src.solswitch Require Import generated_code.
From refinedc.project.learning.src.solswitch Require Import generated_spec.
Set Default Proof Using "Type".

(* Generated from [src/solswitch.c]. *)
Section proof_SML_handleReceivedMsgs_with_length.
  Context `{!typeG Σ} `{!globalG Σ}.

  (* Typing proof for [SML_handleReceivedMsgs_with_length]. *)
  Lemma type_SML_handleReceivedMsgs_with_length :
    ⊢ typed_function impl_SML_handleReceivedMsgs_with_length type_of_SML_handleReceivedMsgs_with_length.
  Proof.
    Open Scope printing_sugar.
    start_function "SML_handleReceivedMsgs_with_length" ([[[state msg] p] len]) => arg_ssp arg_rxMsgSize.
    prepare_parameters (state msg p len).
    split_blocks ((
      ∅
    )%I : gmap label (iProp Σ)) ((
      ∅
    )%I : gmap label (iProp Σ)).
    - repeat liRStep; liShow.
    destruct state.
    -- repeat liRStep; liShow.
    -- liRStep. liRStep.  liRStep. liRStep.  liRStep.  liRStep. liRStep. liRStep. liRStep. liRStep.
      all: print_typesystem_goal "SML_handleReceivedMsgs_with_length" "#0".
    Unshelve. all: li_unshelve_sidecond; sidecond_hook; prepare_sideconditions; normalize_and_simpl_goal; try solve_goal; unsolved_sidecond_hook.
  --- 
  
    all: print_sidecondition_goal "SML_handleReceivedMsgs_with_length".
    Unshelve. all: try done; try apply: inhabitant; print_remaining_shelved_goal "SML_handleReceivedMsgs_with_length".
  Qed.
End proof_SML_handleReceivedMsgs_with_length.
